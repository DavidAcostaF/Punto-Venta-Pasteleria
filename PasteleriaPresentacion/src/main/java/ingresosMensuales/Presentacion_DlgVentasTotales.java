/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ingresosMensuales;

import com.mycompany.pasteleriacalculargananciasdeldia.FuncionalidadCalcularGananciasDelDia;
import com.mycompany.pasteleriacalculargananciasdeldia.IFuncionalidadCalcularGananciasDelDia;
import com.mycompany.pasteleriaconsultarventas.FuncionalidadConsultarVentas;
import com.mycompany.pasteleriaconsultarventas.IFuncionalidadConsultarVentas;
import com.mycompany.pasteleriacontarventaspordia.FuncionalidadContarVentasPorDia;
import com.mycompany.pasteleriacontarventaspordia.IFuncionalidadContarVentasPorDia;
import com.mycompany.pasteleriagenerarreporte.FuncionalidadGenerarReporte;
import com.mycompany.pasteleriagenerarreporte.IFuncionalidadGenerarReporte;
import com.mycompany.pasteleriaguardarreportes.FuncionalidadGuardarReportes;
import com.mycompany.pasteleriaguardarreportes.IFuncionalidadGuardarReportes;
import control.ControlAgregarVenta;
import control.ControlIngresosMensuales;
import dto.DTO_GenerarReporte;
import dto.DTO_Producto;
import dto.DTO_Reporte;
import dto.DTO_ReporteIngresosDetalles;
import dto.DTO_ReporteIngresosFormato;
import dto.DTO_Venta;
import extras.ButtonColumn;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import net.miginfocom.layout.AC;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;

/**
 *
 * @author PC
 */
public class Presentacion_DlgVentasTotales extends javax.swing.JFrame {

    private IFuncionalidadContarVentasPorDia funcionalidadVentasPorDia;
    private IFuncionalidadCalcularGananciasDelDia funcionalidadGananciasDelDia;
    private IFuncionalidadConsultarVentas funcionalidadConsultarVentas;
    private IFuncionalidadGuardarReportes funcionalidadGuardarReportes;
    private IFuncionalidadGenerarReporte generadorReportes;
    private ControlIngresosMensuales controlIngresos;
    private ControlAgregarVenta controlPrincipal;
    private List<DTO_Venta> listaVentas;
    Date fechaInicial;
    private SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy"); // Formato deseado para la fecha

    /**
     * Creates new form Presentacion_DlgVentasTotales
     */
    public Presentacion_DlgVentasTotales() {
        initComponents();
        setSize(750, 550);
        this.funcionalidadVentasPorDia = new FuncionalidadContarVentasPorDia();
        this.funcionalidadGananciasDelDia = new FuncionalidadCalcularGananciasDelDia();
        this.funcionalidadConsultarVentas = new FuncionalidadConsultarVentas();
        this.funcionalidadGuardarReportes = new FuncionalidadGuardarReportes();
        this.generadorReportes = new FuncionalidadGenerarReporte();
        this.controlIngresos = ControlIngresosMensuales.getInstance();
        this.fechaInicial = this.controlIngresos.getFechaSeleccionada();
        this.listaVentas = new ArrayList<>();
        this.controlPrincipal = new ControlAgregarVenta();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(fechaInicial);
        calendar.add(Calendar.DAY_OF_MONTH, 30);
        this.txtFechaInicial.setEditable(false);
        this.txtFechaFinal.setEditable(false);
        this.txtIngresosTotales.setEditable(false);
        this.txtFechaInicial.setText(dateFormat.format(controlIngresos.getFechaSeleccionada()));
        this.txtFechaFinal.setText(dateFormat.format(calendar.getTime()));
        this.tableDetallesVenta.getTableHeader().setVisible(false);
        this.tableDetallesVenta.setVisible(false);
        this.botonEsconderDetalles.setVisible(false);
        llenarTabla();
        establecerIngresosTotales();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        botonExportarPDF = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableVentas = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        labelTotal = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtFechaInicial = new javax.swing.JTextField();
        txtFechaFinal = new javax.swing.JTextField();
        botonContinuar = new javax.swing.JButton();
        botonRetroceder = new javax.swing.JButton();
        labelTotal1 = new javax.swing.JLabel();
        txtIngresosTotales = new javax.swing.JTextField();
        botonEsconderDetalles = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableDetallesVenta = new javax.swing.JTable();

        jScrollPane2.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        botonExportarPDF.setBackground(new java.awt.Color(140, 220, 254));
        botonExportarPDF.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        botonExportarPDF.setText("Exportar a PDF");
        botonExportarPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonExportarPDFActionPerformed(evt);
            }
        });
        getContentPane().add(botonExportarPDF, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 440, 130, 37));

        tableVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Cantidad de Ventas", "Ganancia del Dia", "null"
            }
        ));
        tableVentas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tableVentas);
        if (tableVentas.getColumnModel().getColumnCount() > 0) {
            tableVentas.getColumnModel().getColumn(3).setHeaderValue("null");
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 99, 465, 265));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel4.setText("Lista de Ventas del Mes");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(274, 73, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setText("Ingresos Mensuales");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel1)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 20, -1, -1));

        labelTotal.setBackground(new java.awt.Color(0, 0, 0));
        labelTotal.setText("Fecha final:");
        getContentPane().add(labelTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 245, 68, 24));

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Fecha inicial:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 188, -1, 24));
        getContentPane().add(txtFechaInicial, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 188, 97, -1));
        getContentPane().add(txtFechaFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 246, 97, -1));

        botonContinuar.setBackground(new java.awt.Color(140, 220, 254));
        botonContinuar.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        botonContinuar.setText("Continuar");
        botonContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonContinuarActionPerformed(evt);
            }
        });
        getContentPane().add(botonContinuar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 440, 130, 37));

        botonRetroceder.setBackground(new java.awt.Color(140, 220, 254));
        botonRetroceder.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        botonRetroceder.setText("Retroceder");
        botonRetroceder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRetrocederActionPerformed(evt);
            }
        });
        getContentPane().add(botonRetroceder, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 440, 130, 37));

        labelTotal1.setBackground(new java.awt.Color(0, 0, 0));
        labelTotal1.setText("Ingresos Totales:");
        getContentPane().add(labelTotal1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 97, 24));
        getContentPane().add(txtIngresosTotales, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 390, 144, -1));

        botonEsconderDetalles.setBackground(new java.awt.Color(140, 220, 254));
        botonEsconderDetalles.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        botonEsconderDetalles.setText("Ocultar Detalles");
        botonEsconderDetalles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEsconderDetallesActionPerformed(evt);
            }
        });
        getContentPane().add(botonEsconderDetalles, new org.netbeans.lib.awtextra.AbsoluteConstraints(733, 51, -1, 37));

        tableDetallesVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Fecha", "Nombre Cliente", "Costo de la Venta"
            }
        ));
        jScrollPane3.setViewportView(tableDetallesVenta);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(733, 100, 430, 264));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botonExportarPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonExportarPDFActionPerformed
        try {
            DTO_ReporteIngresosFormato ingresosFormato = new DTO_ReporteIngresosFormato();
            ingresosFormato.setFechaInicial(this.txtFechaInicial.getText());
            ingresosFormato.setFechaFinal(txtFechaFinal.getText());
            ingresosFormato.setIngresosTotales(txtIngresosTotales.getText());
            List<DTO_ReporteIngresosDetalles> listaDetalles = new ArrayList<>();
            int rowCount = this.tableVentas.getModel().getRowCount();

            for (int i = 0; i < rowCount; i++) {
                DTO_ReporteIngresosDetalles ingresoDetalle = new DTO_ReporteIngresosDetalles();
                Object value = this.tableVentas.getModel().getValueAt(i, 1);
                ingresoDetalle.setCantidadVentas(value.toString());
                Object value2 = this.tableVentas.getModel().getValueAt(i, 0);
                ingresoDetalle.setFechaVenta(value2.toString());
                Object value3 = this.tableVentas.getModel().getValueAt(i, 2);
                ingresoDetalle.setGananciasDia(value3.toString());

                String stringValue = (String) value2;
                Date dateValue = null;
                try {
                    dateValue = dateFormat.parse(stringValue);
                } catch (ParseException ex) {
                    Logger.getLogger(Presentacion_DlgVentasTotales.class.getName()).log(Level.SEVERE, null, ex);
                }
                listaVentas = this.funcionalidadConsultarVentas.consultarVentasPorFecha(dateValue);
                for (DTO_Venta dtoVenta : listaVentas) {
                    DTO_Venta ventaProvisional = this.funcionalidadConsultarVentas.encontrarVenta(dtoVenta.getID());
                    String nombreCliente = ventaProvisional.getCliente().getNombre() + " " + ventaProvisional.getCliente().getApellidoP();

                    ingresoDetalle.setFechaCompra(dateFormat.format(dtoVenta.getFechaRegistro()));

                    ingresoDetalle.setNombreCliente(nombreCliente);
                    ingresoDetalle.setTotalDeCompra(String.valueOf(dtoVenta.getMontoTotal()));

                }
                listaDetalles.add(ingresoDetalle);
            }

            System.out.println(listaDetalles.size());
            ingresosFormato.setListaDetalles(listaDetalles);
            DTO_GenerarReporte reporteGenerado = generadorReportes.generarReporteIngresosMensuales(ingresosFormato);

            JasperPrint jasperPrint = JasperFillManager.fillReport(reporteGenerado.getJasperReport(), reporteGenerado.getParameters(), new JREmptyDataSource());

            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Guardar como...");
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos PDF (*.pdf)", "pdf");
            fileChooser.setFileFilter(filter);
            int seleccion = fileChooser.showSaveDialog(this);

            if (seleccion == JFileChooser.APPROVE_OPTION) {
                File archivoSeleccionado = fileChooser.getSelectedFile();
                String rutaArchivo = archivoSeleccionado.getAbsolutePath();

                if (!rutaArchivo.toLowerCase().endsWith(".pdf")) {
                    rutaArchivo += ".pdf";
                }

                JasperExportManager.exportReportToPdfFile(jasperPrint, rutaArchivo);
                JOptionPane.showMessageDialog(this, "El archivo se ha guardado correctamente en:\n" + rutaArchivo, "Archivo guardado", JOptionPane.INFORMATION_MESSAGE);

                if (Desktop.isDesktopSupported()) {
                    File archivo = new File(rutaArchivo);
                    DTO_Reporte reporte = new DTO_Reporte();
                    byte[] bytesArchivo = funcionalidadGuardarReportes.convertirArchivoABytes(archivo);
                    reporte.setBytesContenido(bytesArchivo);
                    reporte.setNombre(archivo.getName());
                    reporte.setCategoria("Reporte Ingresos Mensuales");
                    reporte.setTipo("application/pdf");
                    reporte.setFechaExpedicion(new Date());
                    funcionalidadGuardarReportes.guardarReporte(reporte);
                    Desktop.getDesktop().open(new File(rutaArchivo));

                }

            }
        } catch (JRException ex) {
            Logger.getLogger(Presentacion_DlgVentasTotales.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Presentacion_DlgVentasTotales.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonExportarPDFActionPerformed

    private void botonContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonContinuarActionPerformed
        this.dispose();
        controlPrincipal.mostrarMenu();
    }//GEN-LAST:event_botonContinuarActionPerformed

    private void botonRetrocederActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRetrocederActionPerformed
        this.dispose();
        controlIngresos.mostrarSeleccionadorFecha();
    }//GEN-LAST:event_botonRetrocederActionPerformed

    private void botonEsconderDetallesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEsconderDetallesActionPerformed
        this.tableDetallesVenta.getTableHeader().setVisible(false);
        setSize(750, 550);
        this.tableDetallesVenta.setVisible(false);
        this.botonEsconderDetalles.setVisible(false);
    }//GEN-LAST:event_botonEsconderDetallesActionPerformed

    private void llenarTabla() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Fecha");
        model.addColumn("Cantidad de Ventas");
        model.addColumn("Ganancias del Dia");
        model.addColumn("");

        Date fechaInicial = controlIngresos.getFechaSeleccionada();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(fechaInicial);

        for (int i = 0; i <= 30; i++) {
            Date fecha = calendar.getTime();
            int cantidadVentas = funcionalidadVentasPorDia.contarVentasPorDia(fecha);

            // Verificar si la cantidad de ventas es al menos 1
            if (cantidadVentas >= 1) {
                float gananciaDia = funcionalidadGananciasDelDia.CalcularGananciasDelDia(fecha);

                String fechaFormat = dateFormat.format(fecha);

                Object[] fila = {
                    fechaFormat,
                    cantidadVentas,
                    gananciaDia,
                    "Desplegar Ventas"
                };
                // Agregar la entrada a la tabla
                model.addRow(fila);
            }

            // Avanzar al siguiente día
            calendar.add(Calendar.DAY_OF_MONTH, 1);
        }
        this.tableVentas.setModel(model);
        TableColumnModel columnModel = tableVentas.getColumnModel();

        ButtonColumn desplegarButtonColumn = new ButtonColumn("Desplegar Ventas", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int filaSeleccionada = tableVentas.getSelectedRow();
                if (filaSeleccionada != -1) {
                    String fechaSeleccionadaStr = (String) tableVentas.getValueAt(filaSeleccionada, 0);
                    Date fechaSeleccionada = null;
                    try {
                        fechaSeleccionada = dateFormat.parse(fechaSeleccionadaStr);
                    } catch (ParseException ex) {
                        ex.printStackTrace();
                    }
                    mostrarNuevaTabla(fechaSeleccionada);
                }
            }
        });
        columnModel.getColumn(0).setPreferredWidth(100);
        columnModel.getColumn(1).setPreferredWidth(150);
        columnModel.getColumn(2).setPreferredWidth(150);
        columnModel.getColumn(3).setPreferredWidth(150);
        columnModel.getColumn(3).setCellRenderer(desplegarButtonColumn);
        columnModel.getColumn(3).setCellEditor(desplegarButtonColumn);
    }

    private void mostrarNuevaTabla(Date fechaSeleccionada) {
        this.tableDetallesVenta.getTableHeader().setVisible(true);
        setSize(1200, 550);
        this.tableDetallesVenta.setVisible(true);
        this.botonEsconderDetalles.setVisible(true);

        DefaultTableModel model = new DefaultTableModel();
        model.setRowCount(0);
        model.addColumn("Fecha");
        model.addColumn("Nombre del Cliente");
        model.addColumn("Total de la Venta");

        listaVentas = this.funcionalidadConsultarVentas.consultarVentasPorFecha(fechaSeleccionada);
        for (DTO_Venta listaVenta : listaVentas) {
            float costoVenta = listaVenta.getMontoTotal();
            String nombreCliente = listaVenta.getCliente().getNombre() + " " + listaVenta.getCliente().getApellidoP();

            String fechaFormat = dateFormat.format(fechaSeleccionada);

            Object[] fila = {
                fechaFormat,
                nombreCliente,
                costoVenta
            };
            // Agregar la entrada a la tabla
            model.addRow(fila);
        }
        this.tableDetallesVenta.setModel(model);

        // Actualizar la interfaz de usuario
        revalidate();
        repaint();
    }

    private void establecerIngresosTotales() {
        // Suponiendo que 'model' es tu DefaultTableModel
        int rowCount = this.tableVentas.getModel().getRowCount();
        float totalSum = 0.0f;

        for (int i = 0; i < rowCount; i++) {
            Object value = this.tableVentas.getModel().getValueAt(i, 2); // Obtener el valor en la segunda columna (índice 1)
            if (value instanceof Float) {
                float floatValue = (Float) value;
                totalSum += floatValue;
            }
        }
        this.txtIngresosTotales.setText(String.valueOf(totalSum));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonContinuar;
    private javax.swing.JButton botonEsconderDetalles;
    private javax.swing.JButton botonExportarPDF;
    private javax.swing.JButton botonRetroceder;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelTotal;
    private javax.swing.JLabel labelTotal1;
    private javax.swing.JTable tableDetallesVenta;
    private javax.swing.JTable tableVentas;
    private javax.swing.JTextField txtFechaFinal;
    private javax.swing.JTextField txtFechaInicial;
    private javax.swing.JTextField txtIngresosTotales;
    // End of variables declaration//GEN-END:variables
}
